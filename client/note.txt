



create a project - npx create-react-app ems
To run a project - npm start
Bootstrap        - npm i react-bootstrap bootstrap
Bootswatch       - for theme

Creating components

Employee.js - To create a array of Employee data
Home.js     - To create a home page js
Icons       - react icons github io
              npm i react-Icons

Add.js      - To add employee
Edit.js     - To edit existing employee

Routing     - To render one page to another
              npm i react-router-dom
              import {BrowserRouter,Routes,Route}  
              
              // Route  - Declares an element that should be rendered at a certain URL path.
              // Routes - A container for a nested tree of elements that renders the branch that best matches the current location.
                          It is a collection of route
              // BrowserRouter - A <Router> for use in web browsers. Provides the cleanest URLs.

Link -  import {Link} from react-router-dom
         
         <Link to={'/edit'}>
            <Button variant="success"><FaUserEdit /> </Button>{' '}
         </Link>

Delete Button 

       useNavigate() -react hook - Returns an imperative method for changing the location. Used by s, but may also be used by other elements to change the location.
              
useNavigate() - react hook - Returns an imperative method for changing the location. Used by s, but may also be used by other elements to change the location.


Edit functionality
Add functionality

---------------------------------------------Hooks used in ems----------------------------------------------------------------------------------------

useState()    - React Hook - To manage state and returns a stateful value and an update function to update It
useEffect()   - React Hook - To manage side side effect
useNavigate() - React Hook - To access  the react router history object and navigate to other router 
useDispatch() - 
useSelector() - 

---------------------------------------------BackEnd connection-----------------------------------------------------------

1.Create Database - Mongodb - To create db and collection
2.Create Server 

3.In Server
             create package.json - npm init
             create node modules - npm i express 
             create index.js file (main entry point)
             install cors - npm i cors

4.In index.js
             import express
             create a server using express
             import cors
             connected to the front end using cors

5.Create Services folder      
             db.js
             logic.js

6.Create db.js in services
             install mongoose - npm i mongoose
             import mongoose
             connected to mongodb using connection string
             create model and schema
             export model
            
7.Create Logic.js
             import db.js
             create functions
             1.get all employees - allEmployees()

8.Frontend
           install axios - npm i axios


